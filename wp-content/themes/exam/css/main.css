/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}.container{margin:0 auto;padding:0 25px}@media all and (min-width: 1199px){.container{max-width:1170px}}.clearfix:after{content:"";display:block;clear:both}img{width:100%;height:auto;vertical-align:middle}a{text-decoration:none}*:hover{transition:all 0.5s ease}.button{padding:20px 40px;font:16px "Lato",sans-serif;background:#fed52f;border:3px solid #fed52f;color:#000;text-transform:uppercase}.button:hover{border:3px solid #fed52f;background:#fff;color:#000}.heading{text-align:center}.heading h3{font:700 25px "Lato",sans-serif;color:#000}@media all and (min-width: 991px){.heading h3{font:900 40px "Lato",sans-serif}}.reed-more{padding-bottom:30px;font:16px "Lato",sans-serif;color:#fed52f;text-transform:uppercase}@media all and (min-width: 991px){.reed-more{padding-bottom:90px}}.site-branding h1{margin-top:5px;margin-bottom:5px}.site-branding h1 a{display:block;max-width:131px}.logo-nav .site-branding{float:left}.logo-nav .main-navigation{float:right;padding-top:30px}.menu-bat{display:block;padding-top:3px;font-size:27px;color:#fff}@media all and (min-width: 767px){.menu-bat{padding-left:50px}}@media all and (min-width: 991px){.menu-bat{display:none}}ul.welcome-list{display:none;background:#000;position:absolute;top:106px;left:20px;right:20px;list-style:none;padding-left:0}ul.welcome-list a{display:block;padding:15px 80px;text-align:center;font:900 16px "Lato",sans-serif;color:#fff;text-transform:uppercase}ul.welcome-list a:hover{color:#fed52f}@media all and (min-width: 991px){ul.welcome-list{display:block;margin-top:0;padding-top:5px;padding-left:95px;position:inherit;background:none}ul.welcome-list li{display:inline-block;padding-right:25px}ul.welcome-list li a{padding:5px 10px;border-radius:15px;text-transform:none}}.content-header{padding-top:50px;padding-bottom:50px;text-align:center;color:#fff}.content-header .site-name{font:700 27px "Lato",sans-serif}.content-header .welcome-description{font:700 18px "Lato",sans-serif}.content-header .welcome-button{margin-top:35px;margin-bottom:40px}@media all and (min-width: 991px){.content-header{padding-top:70px;padding-bottom:100px}.content-header .site-name{font:700 60px "Lato",sans-serif}.content-header .welcome-description{max-width:620px;margin:0 auto}.welcome-button{margin-top:50px;margin-bottom:50px}}.top-footer{text-align:center}.footer-logo{max-width:207px;margin:0 auto;padding-top:20px;padding-bottom:30px}.footer-list{list-style:none;padding-left:0;padding-bottom:10px}.footer-list li{padding-bottom:30px}.footer-list li a{font:14px "Lato",sans-serif;color:#000}.footer-list li a:hover{color:#fed52f}.newsletter{padding-bottom:20px;font:14px "Lato",sans-serif;color:#000}.bottom-footer{text-align:center}@media all and (min-width: 991px){.top-footer{display:flex;justify-content:space-between}.top-footer .footer-logo{margin:0}.top-footer .footer-list{column-count:2;width:400px;margin-top:50px;padding-right:50px}.top-footer .newsletter{width:460px;margin-top:50px}}@media all and (min-width: 991px){.bottom-footer{font:14px "Lato",sans-serif;color:#000}.bottom-footer .copy{float:left}.bottom-footer .author-block{float:right}}.blog-bacgr{padding-top:40px}.blog-page{list-style:none;margin-top:0;padding-left:0;background:#fff;text-align:center}.blog-page li{border-bottom:1px solid #e5e5e5}.heading-post a{font:700 24px "Lato",sans-serif;color:#000}.author-post,.my-date{font:14px "Lato",sans-serif}.excerpt{font:16px "Lato",sans-serif}@media all and (min-width: 991px){.blog-page{padding-left:40px}.blog-page li{max-width:886px}.blog-page li .blog-img{float:left;width:50%;box-sizing:border-box;padding:40px 40px 40px 0}.blog-page li .blog-img img{max-width:362px}.blog-page li .blog-heading-post{float:right;width:50%;box-sizing:border-box;padding-top:20px;text-align:left}.blog-page li .blog-heading-post .author-post{padding-right:30px}}.process{text-align:center}.process-list{padding-left:0;list-style:none;text-align:center}.process-list li .process-img{max-width:156px;margin:0 auto}@media all and (min-width: 991px){.process-list{display:flex;justify-content:space-between;padding-bottom:50px}.process-list li{padding:0 35px}}.about-content{text-align:center;padding-top:10px}@media all and (min-width: 991px){.about-content{float:left;width:50%;box-sizing:border-box;text-align:left}.about-content .kontent{max-width:460px}.about-img{float:right;width:50%}}.candidate-section{text-align:center;padding-bottom:40px}@media all and (min-width: 991px){.candidate-section{padding-bottom:100px}}.candidate{list-style:none;padding-left:0}.candidate .candidate-content a{font:700 22px "Lato",sans-serif;color:#000}.candidate .candidate-content a:hover{color:#fed52f}@media all and (min-width: 991px){.candidate li{max-width:33.3%;box-sizing:border-box;float:left;padding-left:17px;padding-right:17px}.candidate li .candidate-img{position:relative}.candidate li .candidate-img .candidate-hover{display:none}.candidate li .candidate-img .candidate-hover:hover{position:absolute;top:0;bottom:0;left:0;right:0;background-color:red;display:block}}@media all and (min-width: 991px){.candidate-content{text-align:left}.candidate-content a{font-size:24px}}.build{padding-top:50px;padding-bottom:50px}.build-wrap{text-align:center;color:#000}.build-wrap h3{font:700 30px "Lato",sans-serif}.build-wrap p{font:700 18px "Lato",sans-serif;padding-bottom:45px}.build-wrap .build-button{margin-bottom:30px}@media all and (min-width: 991px){.build{padding-top:100px;padding-bottom:100px}.build .build-wrap{text-align:left}.build .build-wrap h3{font-size:60px}.build .build-wrap p{max-width:440px;padding-bottom:60px}.build .build-wrap .build-button{margin-bottom:50px}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
